#!/usr/bin/env bash

HOME=~

# ===================================================
# ⚡️ Helper
# ===================================================
function prepend-path {
  case ":$PATH:" in
    *":$1:"*) :;;           # already there
    *) PATH="$1:$PATH";;    # or PATH="$PATH:$1"
  esac
}
function append-path {
  case ":$PATH:" in
    *":$1:"*) :;;           # already there
    *) PATH="$PATH:$1";;    # or PATH="$PATH:$1"
  esac
}

# ===================================================
# ⚡️ Lang
# ===================================================
export LANG='en_US.UTF-8'

# ===================================================
# ⚡️ Dotfiles
# ===================================================
export DOTFILES=~/.dotjitsu
export DOTJITSU_FRAMEWORK="prezto"
export DOTJITSU=~/.dotjitsu
export PRIVATE=~/.private
export KEYTIMEOUT=1

# ===================================================
# ⚡️ FZF
# ===================================================
export FZF_TMUX_HEIGHT='90%'
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_R_OPTS=''
#export _FZF_DEFAULT_OPTS_NO_PREVIEW='--height 80% --layout=reverse --border --inline-info --pointer=»'
export _FZF_DEFAULT_OPTS_NO_PREVIEW='--height 90% --border --layout=reverse --inline-info --pointer=❯'
export _FZF_DEFAULT_OPTS_PREVIEW="--bind 'ctrl-j:ignore,ctrl-k:ignore' --ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
export FZF_DEFAULT_OPTS="$_FZF_DEFAULT_OPTS_NO_PREVIEW"
export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --color=hl:#eb4034,hl+:#ff0000"
export FZF_ALT_C_COMMAND="fd . code work --base-directory $HOME -td"

export GEM_HOME="$HOME/.gem"
export GOPATH="$HOME/.go"
export GREP_OPTIONS="--color=auto"

# # ===================================================
# # ⚡️ HOMEBREW
# # ===================================================
# if [[ -f /opt/homebrew/bin/brew ]]; then
#     export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
#     export HOMEBREW_PREFIX="/opt/homebrew"
# else
#     export HOMEBREW_PREFIX="/usr/local"
# fi

export HOMEBREW_AUTO_UPDATE_SECS=86400
export HOMEBREW_CASK_OPTS="--appdir=~/Applications"
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_BREWFILE=~/.dotjitsu/Brewfile

# ===================================================
# ⚡️ XDG
# ===================================================
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=${HOME}/.config}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=${HOME}/.cache}
export XDG_DATA_HOME=${XDG_DATA_HOME:=${HOME}/.local/share}

# ===================================================
# ⚡️ FNM
# ===================================================
export FNM_DIR="$XDG_DATA_HOME/.fnm"

export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"

# export ZDOTDIR=${ZDOTDIR:=${XDG_CONFIG_HOME}/zsh}
# export DYLD_INSERT_LIBRARIES="/usr/local/lib/libstderred.dylib${DYLD_INSERT_LIBRARIES:+:$DYLD_INSERT_LIBRARIES}"

# ===================================================
# ⚡️ PATHS
# ===================================================
# Local node_modules takes presedence
prepend-path "./node_modules/.bin"
#addPath "$HOME/.config/yarn/global/node_modules/.bin"
#export NODE_PATH=$HOME/.config/yarn/global/node_modules
# export NODE_PATH=$XDG_DATA_HOME/yarn/global/node_modules
export NODE_PATH=$XDG_DATA_HOME/pnpm/global/5/node_modules

prepend-path "$DOTJITSU/bin"
prepend-path "$PRIVATE/bin"
prepend-path "$HOME/bin"
prepend-path "$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin"
prepend-path "$HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin"
prepend-path "$HOMEBREW_PREFIX/opt/binutils/bin"
prepend-path "$HOMEBREW_PREFIX/opt/binutils/bin"
prepend-path "$HOMEBREW_PREFIX/opt/gnu-which/libexec/gnubin"

append-path "$HOME/.go/bin"
append-path "$HOME/.local/bin"
append-path "$HOME/.repos/git-friendly"
append-path "$HOMEBREW_PREFIX/opt/sqlite/bin"
append-path "$HOMEBREW_PREFIX/opt/python/libexec/bin"
append-path "$HOMEBREW_PREFIX/opt/make/libexec/gnubin"

append-path "$HOMEBREW_PREFIX/opt/mozjpeg/bin"
append-path "$HOME/Library/Python/3.8/bin"
append-path "$HOMEBREW_PREFIX/opt/openjdk@8/bin"
append-path "$HOME/.cargo/bin"
append-path "$HOMEBREW_PREFIX/opt/util-linux/bin"
append-path "$HOMEBREW_PREFIX/opt/util-linux/sbin"
# Use core-utils directly

export MANPATH="$HOMEBREW_PREFIX/opt/coreutils/libexec/gnuman:$MANPATH"
export MANWIDTH=120

 # If you'd like to use existing homebrew v1 completions
 # export BASH_COMPLETION_COMPAT_DIR="$HOMEBREW_PREFIX/etc/bash_completion.d"


# ===================================================
# ⚡️ DOCKER
# ===================================================
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1

# ===================================================
# ⚡️ EDITORS
# ===================================================
export BAT_CONFIG_PATH="$HOME/.dotjitsu/bat.conf"
export BROWSER=chromium
export EDITOR='code'
export GIT_EDITOR="code --wait --new-window"
export JAVA_HOME=$HOMEBREW_PREFIX/opt/openjdk@8
export N_PREFIX="$HOME/.config/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
#export PAGER='fzf --ansi'
#export GIT_PAGER=''
export DELTA_PAGER='less -RF'
export PAGER='bat'
export VISUAL='code'


export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.cache/zsh_history  # ensure history file visibility
export HH_CONFIG=hicolor        # get more colors

export VAGRANT_DEFAULT_PROVIDER=vmware_fusion

# GPG / Fix for signed commits
export GPG_TTY=$(tty)
export NODE_REPL_HISTORY=~/.cache/node_repl_history 	# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY_SIZE='32768'               # Allow 32³ entries; the default is 1000.
export NODE_REPL_MODE='sloppy' 						# Use sloppy mode by default, matching web browsers.


# Starship
export STARSHIP_CONFIG=$DOTFILES/starship.toml

# Bkt
export BKT_TMPDIR=~/.cache/bkt

# Remove duplicates in PATH & preserve order (should not be needed, but hey !?)
# export PATH=$(printf "%s" "$PATH" | awk -v RS=':' '!a[$1]++ { if (NR > 1) printf RS; printf $1 }')