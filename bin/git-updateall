#!/bin/bash

# Runs `git pull` on every directory within the current directory

# `find .` search the current directory
# `-type d` find only directories, not files
# `-print` print the directory name
# `-maxdepth 1` limit the depth to one sub-directory
# `-execdir {} \;` run a custom command for every directory found
# `git --git-dir={}/.git --work-tree=$PWD/{} pull` git-pull each directory

#find . -type d -print -maxdepth 1 -execdir git --git-dir={}/.git --work-tree=$PWD/{} pull \;

# store the current dir
CUR_DIR=$(pwd)

# Let the person running the script know what's going on.
echo "Pulling in latest changes for all repositories..."

# Find all git repositories and update it to the master latest revision
for i in $(find . -type d -name ".git" | cut -c 3-); do
    hr -
    echo "⭐️ $i";
    echo ;

    # We have to go to the .git parent directory to call the pull command
    cd "$i";
    cd ..;

    # finally pull
    pull

    # lets get back to the CUR_DIR
    cd $CUR_DIR
done

echo "Complete!"
