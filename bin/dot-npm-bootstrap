#!/usr/bin/env bash

if command -v gnomon > /dev/null 2>&1; then
  formatter="$(command -v gnomon) -t elapsed-total |"
  exec > >($formatter) 2>&1
fi

if [[ -f /opt/homebrew/bin/brew ]]; then
    export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
    export HOMEBREW_PREFIX="/opt/homebrew"
else
    export HOMEBREW_PREFIX="/usr/local"
fi

export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=${HOME}/.config}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=${HOME}/.cache}
export XDG_DATA_HOME=${XDG_DATA_HOME:=${HOME}/.local/share}
export FNM_DIR="$XDG_DATA_HOME/fnm"
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"


echo "☑️  mise use --global node@lts"
mise use --global node@lts

echo "☑️  npm install --global corepack@latest"
npm install --global corepack@latest

echo "☑️  corepack enable pnpm"
corepack enable pnpm

echo "☑️  corepack use pnpm@latest"
corepack use pnpm@latest
pnpm approve-builds

hr
# echo "☑️  Upgrade node LTS..."
#fnm install --lts
#fnm default lts-latest

hr
echo "☑️  Set global cache config..."
# $HOME/.local/share/.fnm/node-versions/v**/installation/etc/npmrc
touch ~/.npmrc

#npm config --global set cache ~/.cache/npm-cache
npm config --global set fund false
npm config --global set init-author-email "johan@borestad.com"
npm config --global set init-author-name "Johan Borestad"
npm config --global set init-author-url "http://borestad.com/"
npm config --global set init-version "0.0.1"
# npm config --global set pnpm-prefix ~/.local/share/pnpm
# npm config --global set store-dir ~/.local/share/.pnpm-store
npm config --global set registry https://registry.npmjs.com
pnpm config --global set auto-install-peers false


# https://github.com/pnpm/pnpm/issues/3361
# Run below command if the registry have changed
# pnpm install -g

hr
echo "☑️  Install/upgrade npm|yarn|pnpm"
corepack enable
corepack prepare pnpm@latest npm@latest yarn@stable --activate

args=(
  # Globals
  # @antfu/ni
  # @babel/core@latest
  # @babel/node@latest
  # @marp-team/marp-cli@latest
  # @microsoft/rush
  @types/node@latest
  #assemblyscript@latest
  #contentful-cli@latest
  #contentful-schema-diff@latest
  # cpy-cli@latest
  # empty-trash-cli@latest
  # fs-extra@latest
  local-web-server@latest
  # node-notifier-cli@latest
  # np@latest
  # serverless@latest
  sharp-cli@latest
  avif@latest
  # tmpin@latest
  ts-node@latest
  # tsx@latest
  typescript@latest
  # zx@latest
  #wrangler@latest
  #puppeteer@latest

  # Linters
  # prettier@latest
  eslint@latest
  # @typescript-eslint/eslint-plugin@latest
  # @typescript-eslint/parser@latest
  # eslint-config-airbnb@latest
  # eslint-config-prettier@latest
  # eslint-config-standard@latest
  # eslint-plugin-import@latest
  # eslint-plugin-jsx-a11y@latest
  # eslint-plugin-node@latest
  # eslint-plugin-prettier@latest
  # eslint-plugin-promise@latest
  # eslint-plugin-react@latest
  # eslint-plugin-sonarjs@latest
  # eslint-plugin-unicorn@latest
)

#NODE_ENV=production yarn global add --production --no-progress -s --link-duplicates "${args[@]}"
echo "☑️  Installing global bun packages..."
# for pkg in "${args[@]}"; do
#   pnpm rm -g "$pkg"
# done
bun add -g "${args[@]}"

# yarn global remove $(yarn global list | grep info | sed 's/^info "\(.*\)@.*".*$/\1/')
# npm ls -gp --depth=0 | awk -F/ '/node_modules/ && !/\/npm$/ {print $NF}' | xargs npm -g rm

rm -f $HOME/package.json
rm -f $HOME/bun.lock
