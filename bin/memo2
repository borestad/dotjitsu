#!/usr/bin/env bash

###
#
# bkt helper for taking any arbritary input using a cache key.
# This enables bkt to be used even with vanilla bash functions
#
# Usage example:
# memo --ttl=60s mycachekey || wget http://speedtest.tele2.net/1MB.zip
#
###

# Default values
ttl="60s"
scope="memo2"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --ttl=*)
        ttl="${1#*=}"
        shift
        ;;
        --scope=*)
        scope="${1#*=}"
        shift
        ;;
        --)
        shift # Skip '--' and stop further argument parsing
        break
        ;;
        *)
        key="$1"
        shift
        ;;
    esac
done

# Collect all remaining arguments as the third (mandatory) argument
if [ -z "$key" ] && [ -n "$1" ]; then
    key="$@"
fi

# Check if the mandatory argument is provided
if [ -z "$key" ]; then
    echo "Error: key is required."
    echo "Usage: $0 [--ttl=value] [--scope=value] -- key(s)"
    exit 1
fi

TMP=$(mktemp -d) && cd $TMP
bkt --ttl="$ttl" --scope="$scope" -- touch tmp.txt
test ! -f tmp.txt
exitcode=$?
rm -rf $TMP || true

exit $exitcode



