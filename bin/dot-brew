#!/usr/bin/env bash
# set -Eeuo pipefail

date "+%F %T"

cd "$(dirname "$0")"
ROOT=$(git rev-parse --show-toplevel)
HOMEBREW_PREFIX=$(/opt/homebrew/bin/brew --prefix)

source $ROOT/.env$

# Setup
LOG_LOCATION="$HOME/logs/brew"
export TERM="xterm-256color"
export COLS=100
export ROWS=30
mkdir -p $LOG_LOCATION
export PATH="$HOMEBREW_PREFIX/bin:$HOMEBREW_PREFIX/sbin:$PATH"w

formatter=""
if command -v gnomon > /dev/null 2>&1; then
  formatter="$(command -v gnomon) -t elapsed-total |"
fi

#exec > >($formatter tee -i $LOG_LOCATION/dot-brew-`date +%F--%H%M%S`.log)
#exec 2>&1

# cd "$(dirname "$0")"/..

export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

# Update brew itself
$HOME/.dotjitsu/bin/hr -
echo "‚ú® brew update"
echo

#ets -s -f "%s.%Ls ‚îÉ " memo --ttl=60min -- brew -v update --auto-update
ets -s -f "%s.%Ls ‚îÉ " 2> /dev/null memo --ttl=60min -- brew -v update

# Install Brewfile formulas
$HOME/.dotjitsu/bin/hr -
echo "‚ú® brew bundle (Brewfile)"
echo
ets -s -f "%s.%Ls ‚îÉ " 2> /dev/null zsh -c "brew -v bundle --file=$HOME/.dotjitsu/Brewfile | rg 'upgrading|Skipping' --color=always --passthrough"

# Update installed bundles (even those not in Brew/Caskfile
$HOME/.dotjitsu/bin/hr -
echo "‚ú® brew upgrade"
echo
ets -s -f "%s.%Ls ‚îÉ " 2> /dev/null zsh -c "brew -v upgrade | rg 'skipping|upgrading' --color=always --passthrough"

rm -f $HOMEBREW_PREFIX/share/zsh/site-functions/_git

# echo "‚ú® Sync /opt/homebrew/bin/ to /usr/local/bin/"

# if [ -z "$PS1" ]; then
#    exit 0
# fi
# time cd /opt/homebrew/bin/ && find . -maxdepth 1 -type l -print0 | xargs -P 16 -0 -I {} bash -c 'sudo ln -sf /opt/homebrew/bin/"$(basename {})" /usr/local/bin'

# Fixes for self updating binaries
chmod 711 $(command -v deno)

echo ""
echo "All done! Enjoy a cold one! üç∫ "
echo ""

date "+%F %T"

exit 0
